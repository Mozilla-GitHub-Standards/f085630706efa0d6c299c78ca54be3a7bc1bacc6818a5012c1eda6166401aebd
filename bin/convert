#!/usr/bin/env python3
# -*- coding: utf-8 -*-

'''tool to convert timestamp and expiry in .tar.gz bundles to use datetime'''

import os
import sys

REPO_DIR = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
sys.path.insert(0, REPO_DIR)

from utils.timestamp import int2datetime
from api.tardata import Tardata
from argparse import ArgumentParser

def convert(tar_path, tmp_path, verbose=False):
    old = Tardata(tar_path, 0)
    new = Tardata(os.path.join(tar_path, tmp_path), 0)
    certs = old.load_certs('*')
    print(len(certs), 'certs to convert')
    for cert in old.load_certs('*'):
        print(cert.common_name)
        new.create_cert(
            cert.common_name,
            cert.modhash,
            cert.key,
            cert.csr,
            cert.crt,
            cert.bug,
            sans=cert.sans,
            expiry=int2datetime(cert.expiry),
            authority=cert.authority,
            destinations=cert.destinations)

if __name__ == '__main__':
    parser = ArgumentParser()
    parser.add_argument(
        '--tar-path',
        default='/data/autocert/certs',
        help='default="%(default)s"; path to certs')
    parser.add_argument(
        '--tmp-path',
        default='temp',
        help='default="%(default)s"; temp path to place converted certs')
    parser.add_argument(
        '--verbose',
        action='store_true',
        help='turn on verbose printing')

    ns = parser.parse_args()
    convert(**ns.__dict__)
